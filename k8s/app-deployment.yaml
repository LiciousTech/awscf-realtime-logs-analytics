apiVersion: apps/v1
kind: Deployment
metadata:
  name: cf-kinesis-deployment
  namespace: observability
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cf-kinesis
  template:
    metadata:
      labels:
        app: cf-kinesis
    spec:
      containers:
        - name: cf-kinesis-container
          image: YOUR_DOCKER_IMAGE_NAME:TAG  # Replace with your actual Docker image name and tag
          imagePullPolicy: IfNotPresent
          env:
            - name: CLICKHOUSE_USER
              value: YOUR_CLICKHOUSE_USER  # Replace with your ClickHouse username
            - name: CLICKHOUSE_PASSWORD
              value: YOUR_CLICKHOUSE_PASSWORD  # Replace with your ClickHouse password
            - name: CLICKHOUSE_URL
              value: YOUR_CLICKHOUSE_URL  # Replace with your ClickHouse URL
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: kinesis-aws-credentials
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: kinesis-aws-credentials
                  key: AWS_SECRET_ACCESS_KEY
          ports:
            - containerPort: 8080
              name: http
          resources:
            limits:
              cpu: 1000m
              memory: 2Gi
            requests:
              cpu: 250m
              memory: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: cf-kinesis-service
  namespace: observability
  labels:
    k8s-svc: cf-kinesis-service
spec:
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: cf-kinesis
  type: ClusterIP
---
apiVersion: v1
kind: Secret
metadata:
  name: kinesis-aws-credentials
type: Opaque
data:
  AWS_ACCESS_KEY_ID: BASE64_ENCODED_AWS_ACCESS_KEY_ID  # Replace with your actual base64-encoded AWS Access Key ID
  AWS_SECRET_ACCESS_KEY: BASE64_ENCODED_AWS_SECRET_ACCESS_KEY  # Replace with your actual base64-encoded AWS Secret Access Key
